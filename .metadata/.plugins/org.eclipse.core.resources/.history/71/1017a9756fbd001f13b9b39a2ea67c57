package com.springboot.filmrentalstore.dao;

import com.springboot.filmrentalstore.model.Actor;
import com.springboot.filmrentalstore.model.Film;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.List;

public interface ActorDAO extends JpaRepository<Actor, Integer> {

    // Find Actors by Last Name
    List<Actor> findByLastName(String lastName);

    // Find Actors by First Name
    List<Actor> findByFirstName(String firstName);

    // Find Films for a given Actor ID using a JOIN query
    @Query("SELECT f FROM Film f JOIN FilmActor fa ON fa.film.filmId = f.filmId WHERE fa.actor.actorId = :actorId")
    List<Film> findFilmsByActorId(int actorId);


    // Find Top 10 Actors by Film Count
    @Query("SELECT a.actorId, CONCAT(a.firstName, ' ', a.lastName) AS fullName, COUNT(fa.film) AS filmCount " +
            "FROM Actor a JOIN FilmActor fa ON fa.actor = a " + // Change 'fa.actor.actorId' to 'fa.actor'
            "GROUP BY a.actorId, a.firstName, a.lastName " +
            "ORDER BY filmCount DESC")
     List<Object[]> findTop10ActorsByFilmCount();
}
