//package com.springboot.filmrentalstore.service;
//
//import com.springboot.filmrentalstore.dao.*;
//import com.springboot.filmrentalstore.model.Actor;
//import com.springboot.filmrentalstore.model.Film;
//import com.springboot.filmrentalstore.model.FilmActor;
//import com.springboot.filmrentalstore.model.FilmActorId;
//
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.data.domain.PageRequest;
//import org.springframework.data.domain.Pageable;
//import org.springframework.stereotype.Service;
//
//import java.time.LocalDateTime;
//import java.util.List;
//
//@Service
//public class ActorService {
//
//    @Autowired
//    private ActorDAO actorDAO;
//    
//    @Autowired
//    private FilmActorDAO filmActorDAO;
//
//    @Autowired
//    private FilmDAO filmDAO;
//
//    public Actor addActor(Actor actor) {
//        return actorDAO.save(actor);
//    }
//
//    public List<Actor> findByLastName(String lastName) {
//        return actorDAO.findByLastName(lastName);
//    }
//
//    public List<Actor> findByFirstName(String firstName) {
//        return actorDAO.findByFirstName(firstName);
//    }
//
//    public Actor updateLastName(int actorId, String lastName) {
//        Actor actor = actorDAO.findById(actorId).orElseThrow(() -> new RuntimeException("Actor not found"));
//        actor.setLastName(lastName);
//        return actorDAO.save(actor);
//    }
//
//    public Actor updateFirstName(int actorId, String firstName) {
//        Actor actor = actorDAO.findById(actorId).orElseThrow(() -> new RuntimeException("Actor not found"));
//        actor.setFirstName(firstName);
//        return actorDAO.save(actor);
//    }
//
//    public List<Film> getFilmsByActorId(int actorId) {
//    	
//    }
//
//    
//
//    public void assignFilmToActor(Long actorId, Film film) {
//        // Validate the Actor exists
//        Actor actor = actorDAO.findById(actorId)
//                .orElseThrow(() -> new RuntimeException("Actor not found"));
//
//        // Validate the Film exists or save it if new
//        Film existingFilm = filmDAO.findById(film.getFilmId())
//                .orElseGet(() -> filmDAO.save(film));
//
//        // Create a new FilmActor mapping
//        FilmActor filmActor = new FilmActor();
//        FilmActorId filmActorId = new FilmActorId();
//        filmActorId.setActor(actorId);
//        filmActorId.setFilm(existingFilm);
//        filmActor.setFilmActorId(filmActorId);
//        filmActor.setLastUpdate(LocalDateTime.now());
//
//        // Save the mapping in the join table
//        filmActorDAO.save(filmActor);
//    }
//
//
//}
