package com.springboot.filmrentalstore.dao;

import com.springboot.filmrentalstore.model.Actor;
import com.springboot.filmrentalstore.model.Film;

import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.List;

public interface ActorDAO extends JpaRepository<Actor, Integer> {
    List<Actor> findByLastName(String lastName);
    List<Actor> findByFirstName(String firstName);

    @Query("""
        SELECT DISTINCT f FROM Film f
        JOIN f.actors a
        WHERE a.actorId = :actorId
    """)
    List<Film> findFilmsByActorId(@Param("actorId") int actorId);

//    @Query("""
//    	    SELECT a.actorId, a.firstName, a.lastName, COUNT(f.filmId) AS filmCount
//    	    FROM FilmActor fa
//    	    JOIN fa.film f
//    	    JOIN fa.actor a
//    	    GROUP BY a.actorId, a.firstName, a.lastName
//    	    ORDER BY filmCount DESC
//    	""")
//    	List<Object[]> findTop10ActorsByFilmCount(Pageable pageable);

}
